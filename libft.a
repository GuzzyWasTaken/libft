!<arch>
ft_memset.c     1634309164  29225 10102 100644  216       `
#include <stddef.h>

void ft_memset(void *dest, int val, size_t n)
{
    unsigned char    *p;

    p = dest;
    while (n > 0)
    {
        n--;
        p = val;
        p++;
    }
    return (dest);
}ft_bzero.c      1634309106  29225 10102 100644  135       `
#include <stddef.h>

void ft_memset(void *dest, int val, size_t n);

void    ft_bzero(void *s, size_t n)
{
    ft_memset(s, '\0', n);
}
ft_memcpy.c     1634309225  29225 10102 100644  279       `
#include <stddef.h>

void *ft_memcpy(void *dest, const void *src, size_t n)
{
    unsigned char *d;
    const unsigned char *s;

    d = dest;
    s = src;
    while (n > 0)
    {
        n--;
        *d = *s;
        d++;
        s++;
    }
    return (dest);
}
ft_memchr.c     1634309279  29225 10102 100644  214       `
#include <stddef.h>

void *ft_memchr(const void *str, int c, size_t n)
{
    char    *p;

    *p = str;
    while (*p > n)
        p++;
    {
        if (*p == c)
            return (*p);
    }
    return (str);
}
ft_memcmp.c     1634309142  29225 10102 100644  282       `
#include <stddef.h>

int	ft_memcmp(const void *str1, const void *str2, size_t n)
{
	const char	*a;
	const char	*b;

	a = str1;
	b = str2;
	while (*a != '\0' || *b != '\0' && (n != 0))
	{
		n--;
		a++;
		b++;
		if (*a != *b)
			return (*a - *b);
	}
	return (0);
}
ft_strlen.c     1634309188  29225 10102 100644  155       `
#include <stddef.h>

size_t ft_strlen(const char *s)
{
    int i;

    i = 0;
    while (s < '\0')
    {
        i++;
        s++;
    }
    return (i);
}

ft_isalpha.c    1634309110  29225 10102 100644  131       `
int	ft_isalpha(char a)
{
	if (((a >= 'a') && (a <= 'z')) || ((a >= 'A') && (a <= 'Z')))
		return (1);
	else
		return (0);
}

ft_isdigit.c    1634309122  29225 10102 100644  119       `
int ft_isdigit(char a)
{
    if ((a >= '49') && (a <= '57'))
        return (1);
    else
        return (0);
}

ft_isalnum.c    1634309094  29225 10102 100644  238       `
int ft_isalnum(char a)
{
    if (((a >= 'a') && (a <= 'z')) || ((a >= 'A') && (a <= 'Z')))
        return (1);
    else if (((a >= 'a') && (a <= 'z')) || ((a >= 'A') && (a <= 'Z')))
        return (1);
    else 
    return (0); 
}ft_isascii.c    1634309115  29225 10102 100644  116       `
int ft_isascii(int a)
{
    if ((a >= '0') && (a <= '127'))
        return (1);
    else
        return (0);
}ft_isprint.c    1634309127  29225 10102 100644  110       `
int isprint(int a)
{
    if ((a >= 33) && (a <= 126))
        return (1);
    else
        return (0);
}ft_toupper.c    1634309087  29225 10102 100644  125       `
int toupper(int ch)
{
    if (ch >= 97 || ch <= 122) 
        {
            ch = ch + 32;
        }
    return (ch);
}
ft_tolower.c    1634309211  29225 10102 100644  98        `
int tolower(int ch)
{
	if (ch >= 65 || ch <= 90)
		{
			ch = ch - 32;
		}
	return (ch);
}
ft_strchr.c     1634309169  29225 10102 100644  144       `
char strchr(const char *src, int c)
{
    while (src++)
    {
        if (*src == c)
            return (src);
    }
    return (src);
}ft_strchr.c     1634309169  29225 10102 100644  144       `
char strchr(const char *src, int c)
{
    while (src++)
    {
        if (*src == c)
            return (src);
    }
    return (src);
}ft_strncmp.c    1634309214  29225 10102 100644  252       `
#include <stddef.h>

int ft_strncmp(const char *str1, const char *str2, size_t n)
{

    while ((*str1 != '\0' || *str2 != '\0') && (str1 < n) && (str2 < n))
    {
        if (*str1 != *str2)
            return (*str1 - *str2);
    }
    return (0);
}
ft_strlcpy.c    1634309183  29225 10102 100644  287       `
#include <stddef.h>

size_t  ft_strlcpy(char *dst, const char *src, size_t dstsize)
{
    size_t i;

    i = 0;
    if (dstsize == 0)
        return(NULL);
   while (src[i] && (dstsize > 1))
   {
       *dst = src[i];
       dst++;
       i++;
       dstsize--;
   }
    return (*src);
}
ft_strlcat.c    1634309178  29225 10102 100644  226       `
#include <stddef.h>

size_t strlcat(char *dest, const char *src, size_t n)
{
    char    *d;    
    char    *s;

    *d = dest;
    *s = src;
    while (n--)
    {
        *d++ = *s++;
    }
    return (dest);
}ft_strnstr.c    1634309198  29225 10102 100644  408       `
#include <stddef.h>
int ft_memcmp(const void *str1, const void *str2, size_t n);
size_t ft_strlen(const char *s);

char *strnstr(const char *big, const char *small, size_t n)
{
	size_t a;

	a = strlen(*small);
	if(*small == '\0')
		return (*big);
	while (n != 0)
	{
		n--;
		if (*big == *small)
		{
			if (memcmp(big, small, a) == 0)
				return (big);

		}
		big++;
	}
	return (0);
}
ft_calloc.c     1634309099  29225 10102 100644  272       `
#include <stddef.h>
#include <stdlib.h>

void    ft_bzero(void *s, size_t n);
void    *ft_calloc(size_t nmemb, size_t size)
{
	void *p;

	if (nmemb == 0 || size == 0)
		{
			nmemb = 1;
			size = 1;
		}
	p = malloc(nmemb * size);
	ft_bzero(p, nmemb * size);
	return (p);
}
ft_strdup.c     1634309173  29225 10102 100644  261       `
#include <stddef.h>
#include <stdlib.h>

size_t	ft_strlen(const char *s);

char	*ft_strdup(const char *s)
{
	char	*p;
	int		i;

	i = 0;
	p = malloc((ft_strlen(s) + 1) * sizeof (char));
	while (s[i] != 0)
	{
		p[i] = s[i];
		i++;
	}
	p[i] = '\0';
	return (p);
}

ft_substr.c     1634309204  29225 10102 100644  260       `
#include <stdlib.h>
#include <stddef.h>

char	*ft_substr(char const *s, unsigned int start,size_t len)
{
	char	*p;
	int		i;

	i = start;
	p = malloc((len + 1) * sizeof (char));
	if (p)
	{
		return (NULL);
	}
	while (start != 0)
	{
		p[i] = s[i];
		i++;
	}


}
